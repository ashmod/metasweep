name: npm-publish

on:
  workflow_dispatch: {}
  release:
    types: [published]

jobs:
  publish-npm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
      - name: Set version to match project
        run: |
          # sync npm package version to project version if needed
          PROJ_VER=$(grep -Po 'project\(metadata_tool LANGUAGES CXX VERSION \K[^)]+' CMakeLists.txt)
          node -e "let p=require('./tools/npm/package.json'); p.version='${PROJ_VER}'; require('fs').writeFileSync('./tools/npm/package.json', JSON.stringify(p, null, 2)+'\n')"
          echo "PROJ_VER=${PROJ_VER}" >> $GITHUB_ENV
      - name: Skip if version already on npm
        run: |
          if npm view metasweep@"${PROJ_VER}" version >/dev/null 2>&1; then
            echo "metasweep@${PROJ_VER} already published. Skipping publish step.";
            exit 0;
          fi
        shell: bash
      - name: Stage vendor binaries (bundle into npm tarball)
        run: |
          set -euo pipefail
          sudo apt-get update && sudo apt-get install -y unzip
          REPO="${{ github.repository }}"
          TAG="${{ github.event.release.tag_name }}"
          if [ -z "$TAG" ]; then TAG="v${PROJ_VER}"; fi
          BASE="https://github.com/${REPO}/releases/download/${TAG}"
          mkdir -p tools/npm/vendor
          mkdir -p tools/npm/vendor/linux-x64 tools/npm/vendor/darwin-arm64 tools/npm/vendor/win32-x64 || true
          # Linux x64
          if curl -fL "${BASE}/metasweep-${PROJ_VER}-Linux-x86_64.tar.gz" -o /tmp/linux.tgz; then
            tar -xzf /tmp/linux.tgz -C tools/npm/vendor/linux-x64
          else
            echo "linux tgz not found"; fi
          # macOS arm64
          if curl -fL "${BASE}/metasweep-${PROJ_VER}-Darwin-arm64.tar.gz" -o /tmp/macos.tgz; then
            tar -xzf /tmp/macos.tgz -C tools/npm/vendor/darwin-arm64
          else
            echo "darwin tgz not found"; fi
          # Windows x64
          if curl -fL "${BASE}/metasweep-${PROJ_VER}-Windows-AMD64.zip" -o /tmp/win.zip; then
            unzip -o /tmp/win.zip -d tools/npm/vendor/win32-x64
          else
            echo "windows zip not found"; fi
      - name: Publish
        working-directory: tools/npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access public
