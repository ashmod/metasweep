name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            install: sudo apt-get update && sudo apt-get install -y cmake build-essential libexiv2-dev libtag1-dev zlib1g-dev
            cpack: cpack -G TGZ --config build/CPackConfig.cmake
          - os: macos-latest
            install: brew install cmake exiv2 taglib zlib pkg-config
            cpack: cpack -G TGZ --config build/CPackConfig.cmake
          - os: windows-latest
            install: echo "no extra deps on Windows"
            cpack: cpack -G ZIP --config build/CPackConfig.cmake

    steps:
      - uses: actions/checkout@v4

      - name: Install deps
        run: ${{ matrix.install }}
        shell: bash

      - name: Configure (full)
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
        shell: bash

      - name: Build (full)
        run: cmake --build build --config Release --parallel

      - name: Install staging
        run: cmake --install build --config Release --prefix staging

      - name: Package (CPack)
        run: ${{ matrix.cpack }}
        shell: bash

      - name: Upload package artifact
        uses: actions/upload-artifact@v4
        with:
          name: metasweep-${{ runner.os }}-full
          path: |
            *.tar.gz
            *.zip

  publish:
    needs: [build, appimage]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  appimage:
    name: AppImage (Linux)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install deps
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake build-essential libexiv2-dev libtag1-dev zlib1g-dev patchelf
      - name: Build
        run: |
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
          cmake --build build --parallel
      - name: Install to AppDir
        run: cmake --install build --prefix AppDir/usr
      - name: Prepare desktop file
        run: |
          cat > AppDir/metasweep.desktop <<'EOF'
          [Desktop Entry]
          Type=Application
          Name=metasweep
          Exec=metasweep
          Icon=metasweep
          Categories=Utility;
          Terminal=true
          EOF
      - name: Build AppImage
        env:
          APPIMAGE_EXTRACT_AND_RUN: 1
        run: |
          curl -L -o linuxdeploy https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
          chmod +x linuxdeploy
          ./linuxdeploy --appdir AppDir -e AppDir/usr/bin/metasweep -d AppDir/metasweep.desktop --output appimage
      - name: Upload AppImage artifact
        uses: actions/upload-artifact@v4
        with:
          name: metasweep-AppImage
          path: ./*.AppImage
